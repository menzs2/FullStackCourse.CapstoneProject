@page "/login"
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient;
@inject IJSRuntime JSRuntime;

<h3>Login</h3>

<div>
    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="username">Username:</label>
            <InputText id="username" @bind-Value="loginModel.Username" />
            <ValidationMessage For="@(() => loginModel.Username)" />
        </div>

        <div>
            <label for="password">Password:</label>
            <InputText id="password" type="password" @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <button type="submit">Login</button>
    </EditForm>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        HttpClient.DefaultRequestHeaders.Clear();
        var response = await HttpClient.PostAsJsonAsync("api/auth/login", loginModel);
        response.EnsureSuccessStatusCode();
        var token = await response.Content.ReadAsStringAsync();
        await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "authToken", token);
        HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }
}